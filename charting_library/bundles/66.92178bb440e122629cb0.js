(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{"1pWb":function(s,t,e){"use strict";function i(s){return!1}e.d(t,"b",(function(){return i})),e.d(t,"a",(function(){return"###"}))},QN5O:function(s,t,e){"use strict";e.d(t,"a",(function(){return l}));var i=e("Eyy1"),o=e("IWXC"),a=e("1pWb");const r=new Map;class n{constructor(s,t,e="watchlist"){this._symbolDataHandlers=new Map,this._fastSymbols=new Set,this._subscribedSymbols=new Set,this._subscriptionSet=new Set,this._cancelSubscriptionSet=new Set,this._resolvedSymbolsSet=new Set,this._quoteSessionDataHandler=s=>{const t=Object(i.ensureDefined)(s.symbolname),{filtered:e,keepSubscription:o}=this._applyDataFilters(s);o||this._unsubscribeSymbols([t]),this._setSymbolDataCache(t,e);const a=this._symbolDataHandlers.get(t);a&&a(e)},this._clientId=s,this._quoteSession=Object(o.getQuoteSessionInstance)(e),this._lastSymbolData=t||new Map}destroy(){const s=Array.from(this._subscribedSymbols);this._unsubscribeSymbols(s)}addFastSymbol(s){this._fastSymbols.has(s)||!this._subscribedSymbols.has(s)||Object(a.b)(s)||(this._fastSymbols.add(s),this._quoteSession.setFastSymbols(this._clientId,Array.from(this._fastSymbols)))}removeFastSymbol(s){this._fastSymbols.has(s)&&(this._fastSymbols.delete(s),this._quoteSession.setFastSymbols(this._clientId,Array.from(this._fastSymbols)))}addSymbolDataHandler(s,t){Object(a.b)(s)||this._symbolDataHandlers.set(s,t)}removeSymbolDataHandler(s){this._symbolDataHandlers.delete(s)}addToSubscriptionSet(s){s.forEach(s=>{Object(a.b)(s)||this._subscriptionSet.add(s)})}clearSubscriptionSet(){this._subscriptionSet.clear()}addToCancelSubscriptionSet(s){s.forEach(s=>{Object(a.b)(s)||this._cancelSubscriptionSet.add(s)})}commitSubscriptionChanges(){Array.from(this._subscriptionSet).forEach(s=>{this._cancelSubscriptionSet.has(s)&&(this._subscriptionSet.delete(s),this._cancelSubscriptionSet.delete(s))}),this._subscribeSymbols(Array.from(this._subscriptionSet)),this._subscriptionSet.clear(),this._unsubscribeSymbols(Array.from(this._cancelSubscriptionSet)),this._cancelSubscriptionSet.clear(),this._quoteSession.setFastSymbols(this._clientId,Array.from(this._fastSymbols))}getLastSymbolData(s){return this._lastSymbolData.get(s)}getSymbolSnapshotForAll(s,t,e=guid()){const i=s.map(s=>this.getSymbolSnapshot(s,t,e));return Promise.all(i)}getSymbolSnapshot(s,t,e=guid()){if(Object(a.b)(s))return Promise.resolve(void 0);const i=this._lastSymbolData.get(s);if(i&&"ok"===i.status){const e=this._resolvedSymbolsSet.has(s)&&i.complete;if(b(i,t)||e)return this._resolvedSymbolsSet.add(s),Promise.resolve(i)}return new Promise(i=>{const o=this._clientId+"_snapshot_"+e,a=e=>{const{filtered:r,keepSubscription:n}=this._applyDataFilters(e);r&&"error"!==r.status&&this._setSymbolDataCache(s,r),(!n||b(r,t)||"error"===r.status||r.complete)&&(this._quoteSession.unsubscribe(o,s,a),i(r))};this._quoteSession.subscribe(o,s,a)})}getSymbolFullName(s){if(Object(a.b)(s))return Promise.resolve(s);if(r.has(s))return Object(i.ensureDefined)(r.get(s));const t=new Promise(t=>{
const e=this._clientId+"_SymbolFullName",i=o=>{const a=o=>{this._quoteSession.unsubscribe(e,s,i),t(o)};o&&"ok"===o.status?o.values&&a(o.values.pro_name||s):a(s)};this._quoteSession.subscribe(e,s,i)});return r.set(s,t),t}getSymbolsFullNames(s){return Promise.all(s.map(s=>this.getSymbolFullName(s)))}getUniqueSymbolsFullNames(s){return this.getSymbolsFullNames(s).then(s=>Array.from(new Set(s)))}_subscribeSymbols(s){this._quoteSession.subscribe(this._clientId,s,this._quoteSessionDataHandler),s.forEach(s=>this._subscribedSymbols.add(s))}_unsubscribeSymbols(s){this._quoteSession.unsubscribe(this._clientId,s,this._quoteSessionDataHandler),s.forEach(s=>{this._subscribedSymbols.delete(s)})}_setSymbolDataCache(s,t){var e;const i=(null===(e=this._lastSymbolData.get(s))||void 0===e?void 0:e.values)||{};this._resolvedSymbolsSet.add(s),this._lastSymbolData.set(s,{...t,values:{...i,...t.values}})}_applyDataFilters(s){return{filtered:s,keepSubscription:!0}}}const l=new class{constructor(){this._adaptersMap=new Map,this._lastSymbolData=new Map}destroy(){this._adaptersMap.forEach(s=>{s.forEach(s=>s.destroy())}),this._lastSymbolData.clear()}get(s,t="watchlist"){let e;const i=this._adaptersMap.get(s);if(i){const o=i.get(t);o?e=o:(e=new n(s,this._lastSymbolData,t),i.set(t,e))}else{e=new n(s,this._lastSymbolData,t);const i=new Map;i.set(t,e),this._adaptersMap.set(s,i)}return e}};function b(s,t){for(const e of Array.from(t))if(!s.values.hasOwnProperty(e))return!1;return!0}}}]);